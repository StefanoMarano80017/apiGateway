server:
  port: 8080

spring:
  redis: 
    host: redis_rate_limiter
    port: 6380
    timeout: 20000  
  
  cache:
    type: redis 

  cloud:
    gateway:
      httpclient:
        connect-timeout: 500000  # Timeout di connessione (5 secondi)
        response-timeout: 150s   # Timeout di risposta (30 secondi)
      routes:
        - id: fallback-route
          uri: http://localhost:8080/fallback # Dove si gestisce il fallback
          predicates:
            - Path=/fallback
        - id: test-route
          uri: http://httpbin.org
          predicates:
            - Path=/test/**
          filters:
            - RewritePath=/test/(?<segment>.*), /${segment}
            - name: AuthenticationFilter
              args:
                cachePrefix: "Auth_Cache:"
                authServiceUrl: "http://t23-controller:8082/validateToken"
                BUFFER_TIME_SECONDS: 600  
                CACHE_TTL_THRESHOLD: 60
            - name: RedisCacheFilter
              args:
                ttl: 60
                cachePrefix: "test_cache:"
                methods: "GET, POST, PUT"
        - id: aggregated-route
          uri: no://op  //il gateway non inoltra direttamente la richiesta a un backend
          predicates:
            - Path=/aggregated
          filters:
            - name: Aggregation
              args:
                services: "http://httpbin.org/get, http://httpbin.org/bytes/10"
        - id: gamerepo-route
          uri: http://t4-controller:8084
          predicates:
            - Path=/gamerepo/**
          filters:
            - RewritePath=/gamerepo/(?<segment>.*), /${segment}
            - name: RedisCacheFilter
              args:
                ttl: 60
                cachePrefix: "gamerepo_cache:"
                methods: "GET"
        - id: T7-route
          uri: http://t7-controller:8087
          predicates:
            - Path=/compile/randoop/**
          filters:
            - RewritePath=/compile/randoop/(?<segment>.*), /${segment}
        - id: T8-route
          uri: http://t8-controller:8088
          predicates:
            - Path=/compile/evosuite/**
          filters:
            - RewritePath=/compile/evosuite/(?<segment>.*), /${segment}
        - id: T1-route
          uri: http://t1-controller:8081
          predicates:
            - Path=/adminService/**
          filters:
            - RewritePath=/adminService/(?<segment>.*), /${segment}
        - id: T23-route
          uri: http://t23-controller:8082
          predicates:
            - Path=/userService/**
          filters:
            - RewritePath=/userService/(?<segment>.*), /${segment}

# Configurazioni aggiuntive per il logging e altre personalizzazioni
logging:
  level:
    org.springframework.cloud.gateway: TRACE
    reactor.netty.http.server: INFO

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true
    env:
      enabled: true
      show-values: ALWAYS

  metrics:
    tags:
      application: apiGateway
